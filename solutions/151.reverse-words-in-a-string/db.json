{
  "java": "/*\n * [151] Reverse Words in a String\n *\n * https://leetcode.com/problems/reverse-words-in-a-string/description/\n *\n * algorithms\n * Medium (15.63%)\n * Total Accepted:    191.9K\n * Total Submissions: 1.2M\n * Testcase Example:  '\"\"'\n *\n * \n * Given an input string, reverse the string word by word.\n * \n * \n * \n * For example,\n * Given s = \"the sky is blue\",\n * return \"blue is sky the\".\n * \n * \n * \n * Update (2015-02-12):\n * For C programmers: Try to solve it in-place in O(1) space.\n * \n * \n * click to show clarification.\n * \n * Clarification:\n * \n * \n * \n * What constitutes a word?\n * A sequence of non-space characters constitutes a word.\n * Could the input string contain leading or trailing spaces?\n * Yes. However, your reversed string should not contain leading or trailing\n * spaces.\n * How about multiple spaces between two words?\n * Reduce them to a single space in the reversed string.\n * \n * \n * \n */\npublic class Solution {\n    public String reverseWords(String s) {\n        String[] words = s.trim().split(\" +\");\n        Collections.reverse(Arrays.asList(words));\n        return String.join(\" \", words);\n    }\n}\n"
}