{"java":"/*\r\n * [151] Reverse Words in a String\r\n *\r\n * https://leetcode.com/problems/reverse-words-in-a-string/description/\r\n *\r\n * algorithms\r\n * Medium (15.63%)\r\n * Total Accepted:    191.9K\r\n * Total Submissions: 1.2M\r\n * Testcase Example:  '\"\"'\r\n *\r\n * \r\n * Given an input string, reverse the string word by word.\r\n * \r\n * \r\n * \r\n * For example,\r\n * Given s = \"the sky is blue\",\r\n * return \"blue is sky the\".\r\n * \r\n * \r\n * \r\n * Update (2015-02-12):\r\n * For C programmers: Try to solve it in-place in O(1) space.\r\n * \r\n * \r\n * click to show clarification.\r\n * \r\n * Clarification:\r\n * \r\n * \r\n * \r\n * What constitutes a word?\r\n * A sequence of non-space characters constitutes a word.\r\n * Could the input string contain leading or trailing spaces?\r\n * Yes. However, your reversed string should not contain leading or trailing\r\n * spaces.\r\n * How about multiple spaces between two words?\r\n * Reduce them to a single space in the reversed string.\r\n * \r\n * \r\n * \r\n */\r\npublic class Solution {\r\n    public String reverseWords(String s) {\r\n        String[] words = s.trim().split(\" +\");\r\n        Collections.reverse(Arrays.asList(words));\r\n        return String.join(\" \", words);\r\n    }\r\n}\r\n"}