{"java":"/*\r\n * [557] Reverse Words in a String III\r\n *\r\n * https://leetcode.com/problems/reverse-words-in-a-string-iii/description/\r\n *\r\n * algorithms\r\n * Easy (60.08%)\r\n * Total Accepted:    65K\r\n * Total Submissions: 108.1K\r\n * Testcase Example:  '\"Let\\'s take LeetCode contest\"'\r\n *\r\n * Given a string, you need to reverse the order of characters in each word\r\n * within a sentence while still preserving whitespace and initial word order.\r\n * \r\n * Example 1:\r\n * \r\n * Input: \"Let's take LeetCode contest\"\r\n * Output: \"s'teL ekat edoCteeL tsetnoc\"\r\n * \r\n * \r\n * \r\n * Note:\r\n * In the string, each word is separated by single space and there will not be\r\n * any extra space in the string.\r\n * \r\n */\r\nclass Solution {\r\n    public String reverseWords(String s) {\r\n\t\tString words[] = s.split(\" \");\r\n\t\tStringBuilder res = new StringBuilder();\r\n\t\tfor (String word : words)\r\n\t\t\tres.append(new StringBuffer(word).reverse().toString() + \" \");\r\n\t\treturn res.toString().trim(); //trim()方法返回调用字符串对象的一个副本，但是所有起始和结尾的空格都被删除了\r\n\t}\r\n}\r\n"}