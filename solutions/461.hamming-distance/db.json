{"java":"/*\r\n * [461] Hamming Distance\r\n *\r\n * https://leetcode.com/problems/hamming-distance/description/\r\n *\r\n * algorithms\r\n * Easy (69.56%)\r\n * Total Accepted:    144.1K\r\n * Total Submissions: 207.1K\r\n * Testcase Example:  '1\\n4'\r\n *\r\n * The Hamming distance between two integers is the number of positions at\r\n * which the corresponding bits are different.\r\n * \r\n * Given two integers x and y, calculate the Hamming distance.\r\n * \r\n * Note:\r\n * 0 ≤ x, y < 231.\r\n * \r\n * \r\n * Example:\r\n * \r\n * Input: x = 1, y = 4\r\n * \r\n * Output: 2\r\n * \r\n * Explanation:\r\n * 1   (0 0 0 1)\r\n * 4   (0 1 0 0)\r\n * ⁠      ↑   ↑\r\n * \r\n * The above arrows point to positions where the corresponding bits are\r\n * different.\r\n * \r\n * \r\n */\r\nclass Solution {\r\n    public int hammingDistance(int x, int y) {\r\n        int distance = 0;\r\n        while(x != 0 || y != 0){\r\n            if(x % 2 != y % 2){\r\n                distance++;\r\n            }\r\n            x /= 2;\r\n            y /= 2;\r\n        }\r\n        return distance;\r\n    }\r\n}\r\n"}