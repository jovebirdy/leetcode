{
  "java": "/*\n * [461] Hamming Distance\n *\n * https://leetcode.com/problems/hamming-distance/description/\n *\n * algorithms\n * Easy (69.56%)\n * Total Accepted:    144.1K\n * Total Submissions: 207.1K\n * Testcase Example:  '1\\n4'\n *\n * The Hamming distance between two integers is the number of positions at\n * which the corresponding bits are different.\n * \n * Given two integers x and y, calculate the Hamming distance.\n * \n * Note:\n * 0 \u2264 x, y < 231.\n * \n * \n * Example:\n * \n * Input: x = 1, y = 4\n * \n * Output: 2\n * \n * Explanation:\n * 1   (0 0 0 1)\n * 4   (0 1 0 0)\n * \u2060      \u2191   \u2191\n * \n * The above arrows point to positions where the corresponding bits are\n * different.\n * \n * \n */\nclass Solution {\n    public int hammingDistance(int x, int y) {\n        int distance = 0;\n        while(x != 0 || y != 0){\n            if(x % 2 != y % 2){\n                distance++;\n            }\n            x /= 2;\n            y /= 2;\n        }\n        return distance;\n    }\n}\n"
}