{"java":"/*\r\n * [575] Distribute Candies\r\n *\r\n * https://leetcode.com/problems/distribute-candies/description/\r\n *\r\n * algorithms\r\n * Easy (57.91%)\r\n * Total Accepted:    42.3K\r\n * Total Submissions: 73.1K\r\n * Testcase Example:  '[1,1,2,2,3,3]'\r\n *\r\n * Given an integer array with even length, where different numbers in this\r\n * array represent different kinds of candies. Each number means one candy of\r\n * the corresponding kind. You need to distribute these candies equally in\r\n * number to brother and sister. Return the maximum number of kinds of candies\r\n * the sister could gain. \r\n * \r\n * Example 1:\r\n * \r\n * Input: candies = [1,1,2,2,3,3]\r\n * Output: 3\r\n * Explanation:\r\n * There are three different kinds of candies (1, 2 and 3), and two candies for\r\n * each kind.\r\n * Optimal distribution: The sister has candies [1,2,3] and the brother has\r\n * candies [1,2,3], too. \r\n * The sister has three different kinds of candies. \r\n * \r\n * \r\n * \r\n * Example 2:\r\n * \r\n * Input: candies = [1,1,2,3]\r\n * Output: 2\r\n * Explanation: For example, the sister has candies [2,3] and the brother has\r\n * candies [1,1]. \r\n * The sister has two different kinds of candies, the brother has only one kind\r\n * of candies. \r\n * \r\n * \r\n * \r\n * Note:\r\n * \r\n * The length of the given array is in range [2, 10,000], and will be even.\r\n * The number in given array is in range [-100,000, 100,000].\r\n * \r\n * \r\n */\r\nclass Solution {\r\n    public int distributeCandies(int[] candies) {\r\n        HashSet < Integer > set = new HashSet < > ();\r\n        for (int candy: candies) {\r\n            set.add(candy);\r\n        }\r\n        return Math.min(set.size(), candies.length / 2);\r\n    }\r\n}\r\n"}