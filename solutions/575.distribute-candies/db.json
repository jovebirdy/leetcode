{
  "java": "/*\n * [575] Distribute Candies\n *\n * https://leetcode.com/problems/distribute-candies/description/\n *\n * algorithms\n * Easy (57.91%)\n * Total Accepted:    42.3K\n * Total Submissions: 73.1K\n * Testcase Example:  '[1,1,2,2,3,3]'\n *\n * Given an integer array with even length, where different numbers in this\n * array represent different kinds of candies. Each number means one candy of\n * the corresponding kind. You need to distribute these candies equally in\n * number to brother and sister. Return the maximum number of kinds of candies\n * the sister could gain. \n * \n * Example 1:\n * \n * Input: candies = [1,1,2,2,3,3]\n * Output: 3\n * Explanation:\n * There are three different kinds of candies (1, 2 and 3), and two candies for\n * each kind.\n * Optimal distribution: The sister has candies [1,2,3] and the brother has\n * candies [1,2,3], too. \n * The sister has three different kinds of candies. \n * \n * \n * \n * Example 2:\n * \n * Input: candies = [1,1,2,3]\n * Output: 2\n * Explanation: For example, the sister has candies [2,3] and the brother has\n * candies [1,1]. \n * The sister has two different kinds of candies, the brother has only one kind\n * of candies. \n * \n * \n * \n * Note:\n * \n * The length of the given array is in range [2, 10,000], and will be even.\n * The number in given array is in range [-100,000, 100,000].\n * \n * \n */\nclass Solution {\n    public int distributeCandies(int[] candies) {\n        HashSet < Integer > set = new HashSet < > ();\n        for (int candy: candies) {\n            set.add(candy);\n        }\n        return Math.min(set.size(), candies.length / 2);\n    }\n}\n"
}