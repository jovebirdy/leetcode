{
  "java": "/*\n * [566] Reshape the Matrix\n *\n * https://leetcode.com/problems/reshape-the-matrix/description/\n *\n * algorithms\n * Easy (57.68%)\n * Total Accepted:    45.8K\n * Total Submissions: 79.3K\n * Testcase Example:  '[[1,2],[3,4]]\\n1\\n4'\n *\n * In MATLAB, there is a very useful function called 'reshape', which can\n * reshape a matrix into a new one with different size but keep its original\n * data.\n * \n * \n * \n * You're given a matrix represented by a two-dimensional array, and two\n * positive integers r and c representing the row number and column number of\n * the wanted reshaped matrix, respectively.\n * \n * \u2060The reshaped matrix need to be filled with all the elements of the original\n * matrix in the same row-traversing order as they were.\n * \n * \n * \n * If the 'reshape' operation with given parameters is possible and legal,\n * output the new reshaped matrix; Otherwise, output the original matrix.\n * \n * \n * Example 1:\n * \n * Input: \n * nums = \n * [[1,2],\n * \u2060[3,4]]\n * r = 1, c = 4\n * Output: \n * [[1,2,3,4]]\n * Explanation:The row-traversing of nums is [1,2,3,4]. The new reshaped matrix\n * is a 1 * 4 matrix, fill it row by row by using the previous list.\n * \n * \n * \n * Example 2:\n * \n * Input: \n * nums = \n * [[1,2],\n * \u2060[3,4]]\n * r = 2, c = 4\n * Output: \n * [[1,2],\n * \u2060[3,4]]\n * Explanation:There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So\n * output the original matrix.\n * \n * \n * \n * Note:\n * \n * The height and width of the given matrix is in range [1, 100].\n * The given r and c are all positive.\n * \n * \n */\nclass Solution {\n    public int[][] matrixReshape(int[][] nums, int r, int c) {\n        if(nums.length * nums[0].length != r * c) return nums;\n        int[][] res = new int[r][c];\n        int a = 0, b = 0;\n        for(int i = 0; i < r; i++){\n            for(int j = 0; j < c; j++){\n                if(b == nums[0].length){\n                    b = 0;\n                    a++;\n                }\n                res[i][j] = nums[a][b++];\n            }\n        }\n        return res;\n    }\n}\n"
}