{
  "java": "/*\n * [8] String to Integer (atoi)\n *\n * https://leetcode.com/problems/string-to-integer-atoi/description/\n *\n * algorithms\n * Medium (14.04%)\n * Total Accepted:    221K\n * Total Submissions: 1.6M\n * Testcase Example:  '\"\"'\n *\n * Implement atoi to convert a string to an integer.\n * \n * Hint: Carefully consider all possible input cases. If you want a challenge,\n * please do not see below and ask yourself what are the possible input cases.\n * \n * Notes: It is intended for this problem to be specified vaguely (ie, no given\n * input specs). You are responsible to gather all the input requirements up\n * front.\n * \n * \n * \n * Requirements for atoi:\n * \n * The function first discards as many whitespace characters as necessary until\n * the first non-whitespace character is found. Then, starting from this\n * character, takes an optional initial plus or minus sign followed by as many\n * numerical digits as possible, and interprets them as a numerical value.\n * \n * The string can contain additional characters after those that form the\n * integral number, which are ignored and have no effect on the behavior of\n * this function.\n * \n * If the first sequence of non-whitespace characters in str is not a valid\n * integral number, or if no such sequence exists because either str is empty\n * or it contains only whitespace characters, no conversion is performed.\n * \n * If no valid conversion could be performed, a zero value is returned. If the\n * correct value is out of the range of representable values, INT_MAX\n * (2147483647) or INT_MIN (-2147483648) is returned.\n * \n */\npublic class Solution {\n\tpublic int myAtoi(String str) {\n\t\tif (str.isEmpty())\n\t\t\treturn 0;\n\t\tstr = str.trim();\n\t\tint i = 0, ans = 0, sign = 1, len = str.length();\n\t\tif (str.charAt(i) == '-' || str.charAt(i) == '+')\n\t\t\tsign = str.charAt(i++) == '+' ? 1 : -1;\n\t\tfor (; i < len; ++i) {\n\t\t\tint tmp = str.charAt(i) - '0';\n\t\t\tif (tmp < 0 || tmp > 9)\n\t\t\t\tbreak;\n\t\t\tif (ans > Integer.MAX_VALUE / 10\n\t\t\t\t\t|| (ans == Integer.MAX_VALUE / 10 && Integer.MAX_VALUE % 10 < tmp))\n\t\t\t\treturn sign == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;\n\t\t\telse\n\t\t\t\tans = ans * 10 + tmp;\n\t\t}\n\t\treturn sign * ans;\n\t}\n}\n"
}