{
  "sql": "#\n# [620] Not Boring Movies\n#\n# https://leetcode.com/problems/not-boring-movies/description/\n#\n# database\n# Easy (59.57%)\n# Total Accepted:    22K\n# Total Submissions: 37K\n# Testcase Example:  '{\"headers\":{\"cinema\":[\"id\", \"movie\", \"description\", \"rating\"]},\"rows\":{\"cinema\":[[1, \"War\", \"great 3D\", 8.9], [2, \"Science\", \"fiction\", 8.5], [3, \"irish\", \"boring\", 6.2], [4, \"Ice song\", \"Fantacy\", 8.6], [5, \"House card\", \"Interesting\", 9.1]]}}'\n#\n# X city opened a new cinema, many people would like to go to this cinema.\n# The cinema also gives out a poster indicating the movies\u2019 ratings and\n# descriptions. \n# \u2060\n# Please write a SQL query to output movies with an odd numbered ID and a\n# description that is not 'boring'. Order the result by rating.\n# \n# \n# For example, table cinema:\n# \n# +---------+-----------+--------------+-----------+\n# |   id    | movie     |  description |  rating   |\n# +---------+-----------+--------------+-----------+\n# |   1     | War       |   great 3D   |   8.9     |\n# |   2     | Science   |   fiction    |   8.5     |\n# |   3     | irish     |   boring     |   6.2     |\n# |   4     | Ice song  |   Fantacy    |   8.6     |\n# |   5     | House card|   Interesting|   9.1     |\n# +---------+-----------+--------------+-----------+\n# \n# For the example above, the output should be:\n# \n# +---------+-----------+--------------+-----------+\n# |   id    | movie     |  description |  rating   |\n# +---------+-----------+--------------+-----------+\n# |   5     | House card|   Interesting|   9.1     |\n# |   1     | War       |   great 3D   |   8.9     |\n# +---------+-----------+--------------+-----------+\n# \n# \n#\n# Write your MySQL query statement below\nselect *\nfrom cinema\nwhere mod(id, 2) = 1 and description != 'boring'\norder by rating DESC\n;\n"
}