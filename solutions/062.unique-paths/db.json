{
  "py": "#\n# [62] Unique Paths\n#\n# https://leetcode.com/problems/unique-paths/description/\n#\n# algorithms\n# Medium (42.68%)\n# Total Accepted:    184.6K\n# Total Submissions: 432.6K\n# Testcase Example:  '1\\n2'\n#\n# A robot is located at the top-left corner of a m x n grid (marked 'Start' in\n# the diagram below).\n# \n# The robot can only move either down or right at any point in time. The robot\n# is trying to reach the bottom-right corner of the grid (marked 'Finish' in\n# the diagram below).\n# \n# How many possible unique paths are there?\n# \n# \n# \n# Above is a 3 x 7 grid. How many possible unique paths are there?\n# \n# \n# Note: m and n will be at most 100.\n#\nclass Solution:\n    def uniquePaths(self, m, n):\n        \"\"\"\n        :type m: int\n        :type n: int\n        :rtype: int\n        \"\"\"\n        return int(math.factorial(m+n-2)/math.factorial(m-1)/math.factorial(n-1))\n"
}