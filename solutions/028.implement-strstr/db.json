{
  "java": "/*\n * [28] Implement strStr()\n *\n * https://leetcode.com/problems/implement-strstr/description/\n *\n * algorithms\n * Easy (28.91%)\n * Total Accepted:    258.8K\n * Total Submissions: 895.2K\n * Testcase Example:  '\"hello\"\\n\"ll\"'\n *\n * \n * Implement strStr().\n * \n * \n * \n * Return the index of the first occurrence of needle in haystack, or -1 if\n * needle is not part of haystack.\n * \n * \n * Example 1:\n * \n * Input: haystack = \"hello\", needle = \"ll\"\n * Output: 2\n * \n * \n * \n * Example 2:\n * \n * Input: haystack = \"aaaaa\", needle = \"bba\"\n * Output: -1\n * \n * \n */\nclass Solution {\n    public int strStr(String haystack, String needle) {\n        if (haystack == null) {\n            return -1;\n        }\n        if (haystack.length() == 0 && needle.length() == 0) {\n            return 0;\n        }\n        \n        if (haystack.length() == 0) {\n            return -1;\n        }\n        if (haystack.equals(needle)) {\n            return 0;\n        }\n        \n        if (haystack.length() < needle.length()) {\n            return -1;\n        }\n        \n        for (int i = 0; i <= haystack.length() - needle.length(); i++) {\n            if (haystack.substring(i, i + needle.length()).equals(needle)) {\n                return i;\n            }\n        }\n        \n        return -1;\n    }\n}\n"
}