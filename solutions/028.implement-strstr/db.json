{"java":"/*\r\n * [28] Implement strStr()\r\n *\r\n * https://leetcode.com/problems/implement-strstr/description/\r\n *\r\n * algorithms\r\n * Easy (28.91%)\r\n * Total Accepted:    258.8K\r\n * Total Submissions: 895.2K\r\n * Testcase Example:  '\"hello\"\\n\"ll\"'\r\n *\r\n * \r\n * Implement strStr().\r\n * \r\n * \r\n * \r\n * Return the index of the first occurrence of needle in haystack, or -1 if\r\n * needle is not part of haystack.\r\n * \r\n * \r\n * Example 1:\r\n * \r\n * Input: haystack = \"hello\", needle = \"ll\"\r\n * Output: 2\r\n * \r\n * \r\n * \r\n * Example 2:\r\n * \r\n * Input: haystack = \"aaaaa\", needle = \"bba\"\r\n * Output: -1\r\n * \r\n * \r\n */\r\nclass Solution {\r\n    public int strStr(String haystack, String needle) {\r\n        if (haystack == null) {\r\n            return -1;\r\n        }\r\n        if (haystack.length() == 0 && needle.length() == 0) {\r\n            return 0;\r\n        }\r\n        \r\n        if (haystack.length() == 0) {\r\n            return -1;\r\n        }\r\n        if (haystack.equals(needle)) {\r\n            return 0;\r\n        }\r\n        \r\n        if (haystack.length() < needle.length()) {\r\n            return -1;\r\n        }\r\n        \r\n        for (int i = 0; i <= haystack.length() - needle.length(); i++) {\r\n            if (haystack.substring(i, i + needle.length()).equals(needle)) {\r\n                return i;\r\n            }\r\n        }\r\n        \r\n        return -1;\r\n    }\r\n}\r\n"}