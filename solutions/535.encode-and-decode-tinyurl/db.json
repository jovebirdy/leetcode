{
  "java": "class Codec {\n    Map<Integer, String> map1 = new HashMap<Integer, String>();\n    Map<String, Integer> map2 = new HashMap<String, Integer>();\n    String s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    // Encodes a URL to a shortened URL.\n    public String encode(String longUrl) {\n        if(!map2.containsKey(longUrl)){\n            map1.put(map1.size()+1, longUrl);\n            map2.put(longUrl, map2.size()+1);\n        }\n        int n = map2.get(longUrl);\n        StringBuilder sb = new StringBuilder();\n        //\u6bcf\u4e2alongUrl\u7684\u7d22\u5f15n\u662f\u4e0d\u540c\u7684\uff0c\u53ef\u4ee5\u7528n\u5bf962\u7684\u5546\u548c\u4f59\u6570\u6765\u53d6\u54cd\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u7ec4\u6210shortUrl\n        while(n>0){\n            int r = n%62;\n            n /= 62;\n            sb.insert(0, s.charAt(r));\n        }\n        return sb.toString();\n    }\n\n    // Decodes a shortened URL to its original URL.\n    public String decode(String shortUrl) {\n        int val = 0;\n        int n = shortUrl.length();\n        for(int i = 0; i < n; i++){\n            val = val * 62 + s.indexOf(shortUrl.charAt(i));\n        }\n        return map1.get(val);\n    }\n}\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec = new Codec();\n// codec.decode(codec.encode(url));\n"
}