{"java":"/*\r\n * [535] Encode and Decode TinyURL\r\n *\r\n * https://leetcode.com/problems/encode-and-decode-tinyurl/description/\r\n *\r\n * algorithms\r\n * Medium (73.81%)\r\n * Total Accepted:    34.4K\r\n * Total Submissions: 46.7K\r\n * Testcase Example:  '\"https://leetcode.com/problems/design-tinyurl\"'\r\n *\r\n * Note: This is a companion problem to the System Design problem: Design\r\n * TinyURL.\r\n * \r\n * TinyURL is a URL shortening service where you enter a URL such as\r\n * https://leetcode.com/problems/design-tinyurl and it returns a short URL such\r\n * as http://tinyurl.com/4e9iAk.\r\n * \r\n * Design the encode and decode methods for the TinyURL service. There is no\r\n * restriction on how your encode/decode algorithm should work. You just need\r\n * to ensure that a URL can be encoded to a tiny URL and the tiny URL can be\r\n * decoded to the original URL.\r\n */\r\nclass Codec {\r\n    Map<Integer, String> map1 = new HashMap<Integer, String>();\r\n    Map<String, Integer> map2 = new HashMap<String, Integer>();\r\n    String s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    // Encodes a URL to a shortened URL.\r\n    public String encode(String longUrl) {\r\n        if(!map2.containsKey(longUrl)){\r\n            map1.put(map1.size()+1, longUrl);\r\n            map2.put(longUrl, map2.size()+1);\r\n        }\r\n        int n = map2.get(longUrl);\r\n        StringBuilder sb = new StringBuilder();\r\n        //每个longUrl的索引n是不同的，可以用n对62的商和余数来取响应位置的字符组成shortUrl\r\n        while(n>0){\r\n            int r = n%62;\r\n            n /= 62;\r\n            sb.insert(0, s.charAt(r));\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    // Decodes a shortened URL to its original URL.\r\n    public String decode(String shortUrl) {\r\n        int val = 0;\r\n        int n = shortUrl.length();\r\n        for(int i = 0; i < n; i++){\r\n            val = val * 62 + s.indexOf(shortUrl.charAt(i));\r\n        }\r\n        return map1.get(val);\r\n    }\r\n}\r\n\r\n// Your Codec object will be instantiated and called as such:\r\n// Codec codec = new Codec();\r\n// codec.decode(codec.encode(url));\r\n"}