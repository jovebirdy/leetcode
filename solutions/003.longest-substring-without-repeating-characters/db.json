{
  "java": "/*\n * [3] Longest Substring Without Repeating Characters\n *\n * https://leetcode.com/problems/longest-substring-without-repeating-characters/description/\n *\n * algorithms\n * Medium (24.66%)\n * Total Accepted:    458.4K\n * Total Submissions: 1.9M\n * Testcase Example:  '\"abcabcbb\"'\n *\n * Given a string, find the length of the longest substring without repeating\n * characters.\n * \n * Examples:\n * \n * Given \"abcabcbb\", the answer is \"abc\", which the length is 3.\n * \n * Given \"bbbbb\", the answer is \"b\", with the length of 1.\n * \n * Given \"pwwkew\", the answer is \"wke\", with the length of 3. Note that the\n * answer must be a substring, \"pwke\" is a subsequence and not a substring.\n */\nclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n\t\tif (s.length() == 0)\n\t\t\treturn 0;\n\t\tHashMap<Character, Integer> map = new HashMap<Character, Integer>();\n\t\tint max = 0;\n\t\tfor (int i = 0, j = 0; i < s.length(); ++i) {\n\t\t\tif (map.containsKey(s.charAt(i))) {\n\t\t\t\tj = Math.max(j, map.get(s.charAt(i)) + 1);\n\t\t\t}\n\t\t\tmap.put(s.charAt(i), i);\n\t\t\tmax = Math.max(max, i - j + 1);\n\t\t}\n\t\treturn max;\n\t}\n}\n"
}