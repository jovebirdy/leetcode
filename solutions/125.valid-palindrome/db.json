{"java":"/*\r\n * [125] Valid Palindrome\r\n *\r\n * https://leetcode.com/problems/valid-palindrome/description/\r\n *\r\n * algorithms\r\n * Easy (26.94%)\r\n * Total Accepted:    216.7K\r\n * Total Submissions: 804.5K\r\n * Testcase Example:  '\"\"'\r\n *\r\n * \r\n * Given a string, determine if it is a palindrome, considering only\r\n * alphanumeric characters and ignoring cases.\r\n * \r\n * \r\n * \r\n * For example,\r\n * \"A man, a plan, a canal: Panama\" is a palindrome.\r\n * \"race a car\" is not a palindrome.\r\n * \r\n * \r\n * \r\n * Note:\r\n * Have you consider that the string might be empty? This is a good question to\r\n * ask during an interview.\r\n * \r\n * For the purpose of this problem, we define empty string as valid palindrome.\r\n * \r\n */\r\nclass Solution {\r\n    public boolean isPalindrome(String s) {\r\n        if (s == null || s.length() == 0)\r\n            return true;\r\n        int start = 0;\r\n        int end = s.length() - 1;\r\n        while (start < end) {\r\n            char c1 = 0;\r\n            while (start <= end && (c1 = getChar(s, start)) == 0) {\r\n                start++;\r\n            } \r\n            char c2 = 0;\r\n            while (end >= start && (c2 = getChar(s, end)) == 0) {\r\n                end--;\r\n            }\r\n            if (c1 != c2) {\r\n                return false;\r\n            }\r\n            start++;\r\n            end--;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    private char getChar(String s, int index) {\r\n        char ch = s.charAt(index);\r\n        if ((ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9')) {\r\n            return ch;\r\n        } else if (ch >= 'A' && ch <= 'Z') {\r\n            return (char) (ch - 'A' + 'a');\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n"}