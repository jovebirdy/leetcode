{
  "java": "/*\n * [125] Valid Palindrome\n *\n * https://leetcode.com/problems/valid-palindrome/description/\n *\n * algorithms\n * Easy (26.94%)\n * Total Accepted:    216.7K\n * Total Submissions: 804.5K\n * Testcase Example:  '\"\"'\n *\n * \n * Given a string, determine if it is a palindrome, considering only\n * alphanumeric characters and ignoring cases.\n * \n * \n * \n * For example,\n * \"A man, a plan, a canal: Panama\" is a palindrome.\n * \"race a car\" is not a palindrome.\n * \n * \n * \n * Note:\n * Have you consider that the string might be empty? This is a good question to\n * ask during an interview.\n * \n * For the purpose of this problem, we define empty string as valid palindrome.\n * \n */\nclass Solution {\n    public boolean isPalindrome(String s) {\n        if (s == null || s.length() == 0)\n            return true;\n        int start = 0;\n        int end = s.length() - 1;\n        while (start < end) {\n            char c1 = 0;\n            while (start <= end && (c1 = getChar(s, start)) == 0) {\n                start++;\n            } \n            char c2 = 0;\n            while (end >= start && (c2 = getChar(s, end)) == 0) {\n                end--;\n            }\n            if (c1 != c2) {\n                return false;\n            }\n            start++;\n            end--;\n        }\n        return true;\n    }\n    \n    private char getChar(String s, int index) {\n        char ch = s.charAt(index);\n        if ((ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9')) {\n            return ch;\n        } else if (ch >= 'A' && ch <= 'Z') {\n            return (char) (ch - 'A' + 'a');\n        } else {\n            return 0;\n        }\n    }\n}\n"
}