{"java":"/*\r\n * [500] Keyboard Row\r\n *\r\n * https://leetcode.com/problems/keyboard-row/description/\r\n *\r\n * algorithms\r\n * Easy (59.86%)\r\n * Total Accepted:    58.9K\r\n * Total Submissions: 98.4K\r\n * Testcase Example:  '[\"Hello\",\"Alaska\",\"Dad\",\"Peace\"]'\r\n *\r\n * Given a List of words, return the words that can be typed using letters of\r\n * alphabet on only one row's of American keyboard like the image\r\n * below. \r\n * \r\n * \r\n * \r\n * \r\n * \r\n * \r\n * \r\n * Example 1:\r\n * \r\n * Input: [\"Hello\", \"Alaska\", \"Dad\", \"Peace\"]\r\n * Output: [\"Alaska\", \"Dad\"]\r\n * \r\n * \r\n * \r\n * Note:\r\n * \r\n * You may use one character in the keyboard more than once.\r\n * You may assume the input string will only contain letters of alphabet.\r\n * \r\n * \r\n */\r\nclass Solution {\r\n    public String[] findWords(String[] words) {\r\n        String line1 = \"qwertyuiop\", line2 = \"asdfghjkl\", line3 = \"zxcvbnm\";\r\n        ArrayList str = new ArrayList();\r\n        for(int i = 0; i < words.length; i++){\r\n            if(containsAll(line1, words[i]) || containsAll(line2, words[i]) || containsAll(line3, words[i])) str.add(words[i]);\r\n        }\r\n        return (String[])str.toArray(new String[str.size()]);   \r\n    }\r\n    \r\n    public boolean containsAll(String line, String words) {\r\n        char c;\r\n        words = words.toLowerCase();\r\n        for(int i = 0; i < words.length(); i++){\r\n            c = words.charAt(i);\r\n            if(line.indexOf(c) == -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n"}