{
  "java": "/*\n * [500] Keyboard Row\n *\n * https://leetcode.com/problems/keyboard-row/description/\n *\n * algorithms\n * Easy (59.86%)\n * Total Accepted:    58.9K\n * Total Submissions: 98.4K\n * Testcase Example:  '[\"Hello\",\"Alaska\",\"Dad\",\"Peace\"]'\n *\n * Given a List of words, return the words that can be typed using letters of\n * alphabet on only one row's of American keyboard like the image\n * below. \n * \n * \n * \n * \n * \n * \n * \n * Example 1:\n * \n * Input: [\"Hello\", \"Alaska\", \"Dad\", \"Peace\"]\n * Output: [\"Alaska\", \"Dad\"]\n * \n * \n * \n * Note:\n * \n * You may use one character in the keyboard more than once.\n * You may assume the input string will only contain letters of alphabet.\n * \n * \n */\nclass Solution {\n    public String[] findWords(String[] words) {\n        String line1 = \"qwertyuiop\", line2 = \"asdfghjkl\", line3 = \"zxcvbnm\";\n        ArrayList str = new ArrayList();\n        for(int i = 0; i < words.length; i++){\n            if(containsAll(line1, words[i]) || containsAll(line2, words[i]) || containsAll(line3, words[i])) str.add(words[i]);\n        }\n        return (String[])str.toArray(new String[str.size()]);   \n    }\n    \n    public boolean containsAll(String line, String words) {\n        char c;\n        words = words.toLowerCase();\n        for(int i = 0; i < words.length(); i++){\n            c = words.charAt(i);\n            if(line.indexOf(c) == -1) return false;\n        }\n        return true;\n    }\n}\n"
}