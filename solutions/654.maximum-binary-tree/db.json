{"java":"/*\r\n * [654] Maximum Binary Tree\r\n *\r\n * https://leetcode.com/problems/maximum-binary-tree/description/\r\n *\r\n * algorithms\r\n * Medium (69.61%)\r\n * Total Accepted:    28.4K\r\n * Total Submissions: 40.9K\r\n * Testcase Example:  '[3,2,1,6,0,5]'\r\n *\r\n * \r\n * Given an integer array with no duplicates. A maximum tree building on this\r\n * array is defined as follow:\r\n * \r\n * The root is the maximum number in the array. \r\n * The left subtree is the maximum tree constructed from left part subarray\r\n * divided by the maximum number.\r\n * The right subtree is the maximum tree constructed from right part subarray\r\n * divided by the maximum number. \r\n * \r\n * \r\n * \r\n * \r\n * Construct the maximum tree by the given array and output the root node of\r\n * this tree.\r\n * \r\n * \r\n * Example 1:\r\n * \r\n * Input: [3,2,1,6,0,5]\r\n * Output: return the tree root node representing the following tree:\r\n * \r\n * ⁠     6\r\n * ⁠   /   \\\r\n * ⁠  3     5\r\n * ⁠   \\    / \r\n * ⁠    2  0   \r\n * ⁠      \\\r\n * ⁠       1\r\n * \r\n * \r\n * \r\n * Note:\r\n * \r\n * The size of the given array will be in the range [1,1000].\r\n * \r\n * \r\n */\r\n/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public TreeNode constructMaximumBinaryTree(int[] nums) {\r\n\t\tif (nums == null)\r\n\t\t\treturn null;\r\n\t\treturn construct(nums, 0, nums.length - 1);\r\n\t}\r\n\r\n\tpublic TreeNode construct(int[] nums, int start, int end) {\r\n\t\tif (start > end)\r\n\t\t\treturn null;\r\n\t\tint max_idx = start;\r\n\t\tfor (int i = start + 1; i <= end; i++) {\r\n\t\t\tif (nums[i] > nums[max_idx])\r\n\t\t\t\tmax_idx = i;\r\n\t\t}\r\n\t\tTreeNode node = new TreeNode(nums[max_idx]);\r\n\t\tnode.left = construct(nums, start, max_idx - 1);\r\n\t\tnode.right = construct(nums, max_idx + 1, end);\r\n\t\treturn node;\r\n\t}\r\n}\r\n"}