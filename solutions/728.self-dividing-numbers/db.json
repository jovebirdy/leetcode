{
  "java": "class Solution {\n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> nums = new ArrayList();\n        for(int i = left; i <= right; i++){\n            if(selfDividing(i)) nums.add(i);\n        }\n        return nums;\n    }\n    \n    public boolean selfDividing(int n){\n        int x = n;\n\t\twhile (x > 0) {\n\t\t\tint r = x % 10;\n\t\t\tx /= 10;\n\t\t\tif (r == 0 || n % r > 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n    }\n    \n    /*\n    Alternate implementation of selfDividing:\n    public boolean selfDividing(int n) {\n        for (char c: String.valueOf(n).toCharArray()) {\n            if (c == '0' || (n % (c - '0') > 0))\n                return false;\n        }\n        return true;\n    }\n    */\n}\n"
}