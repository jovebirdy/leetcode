{"java":"/*\r\n * [1] Two Sum\r\n *\r\n * https://leetcode.com/problems/two-sum/description/\r\n *\r\n * algorithms\r\n * Easy (37.78%)\r\n * Total Accepted:    851.4K\r\n * Total Submissions: 2.3M\r\n * Testcase Example:  '[3,2,4]\\n6'\r\n *\r\n * Given an array of integers, return indices of the two numbers such that they\r\n * add up to a specific target.\r\n * \r\n * You may assume that each input would have exactly one solution, and you may\r\n * not use the same element twice.\r\n * \r\n * \r\n * Example:\r\n * \r\n * Given nums = [2, 7, 11, 15], target = 9,\r\n * \r\n * Because nums[0] + nums[1] = 2 + 7 = 9,\r\n * return [0, 1].\r\n * \r\n * \r\n */\r\nclass Solution {\r\n    public int[] twoSum(int[] nums, int target) {\r\n\t\tMap<Integer, Integer> map = new HashMap<>();\r\n\t\tfor (int i = 0; i < nums.length; i++) {\r\n\t\t\tif(map.containsKey(target - nums[i])) return new int[] {map.get(target - nums[i]), i};\r\n\t\t\tmap.put(nums[i], i);\r\n\t\t}\r\n\t\tthrow new IllegalArgumentException(\"No two sum solution\");\r\n\t}\r\n}\r\n"}