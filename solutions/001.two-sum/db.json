{
  "java": "/*\n * [1] Two Sum\n *\n * https://leetcode.com/problems/two-sum/description/\n *\n * algorithms\n * Easy (37.78%)\n * Total Accepted:    851.4K\n * Total Submissions: 2.3M\n * Testcase Example:  '[3,2,4]\\n6'\n *\n * Given an array of integers, return indices of the two numbers such that they\n * add up to a specific target.\n * \n * You may assume that each input would have exactly one solution, and you may\n * not use the same element twice.\n * \n * \n * Example:\n * \n * Given nums = [2, 7, 11, 15], target = 9,\n * \n * Because nums[0] + nums[1] = 2 + 7 = 9,\n * return [0, 1].\n * \n * \n */\nclass Solution {\n    public int[] twoSum(int[] nums, int target) {\n\t\tMap<Integer, Integer> map = new HashMap<>();\n\t\tfor (int i = 0; i < nums.length; i++) {\n\t\t\tif(map.containsKey(target - nums[i])) return new int[] {map.get(target - nums[i]), i};\n\t\t\tmap.put(nums[i], i);\n\t\t}\n\t\tthrow new IllegalArgumentException(\"No two sum solution\");\n\t}\n}\n"
}